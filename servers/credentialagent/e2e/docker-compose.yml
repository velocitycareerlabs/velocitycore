services:
  certgen:
    container_name: e2e-certgen
    image: alpine/openssl@sha256:f4dead2cc05e01fb683f04ef5573da53ecf2004c8d7603e1c65f6994d8d38313
    restart: on-failure
    volumes:
      - httpscert:/certs
    command: req -x509 -keyout /certs/key.pem -out /certs/cert.crt -sha256 -days 365 -nodes -subj "/CN=e2e-registrar"

  certfix:
    container_name: e2e-certfix
    image: alpine@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
    restart: on-failure
    volumes:
      - httpscert:/certs
    command: chown -R 1000:1000 /certs
    depends_on:
      - certgen

  besu:
    container_name: e2e-besu
    image: ghcr.io/velocitynetworkfoundation/blockchain-dev@sha256:596ccbfd5b6153741001428d34946d4294160d323992bd1f05ebdc11953c2fef
    restart: on-failure
    ports:
      - 18545:8545

  auth0:
    image: public.ecr.aws/primaassicurazioni/localauth0:0.8.2@sha256:197dfa7dbb7eafc46343397ff8154822059151dfddf053d8740e600e5fe73486
    restart: on-failure
    healthcheck:
      test: [ "CMD", "/localauth0", "healthcheck" ]
    environment:
      LOCALAUTH0_CONFIG_PATH: /etc/localauth0.toml
    volumes:
      - ./localauth0.toml:/etc/localauth0.toml:ro
    ports:
      - 13000:3000
      - 13001:3001

  localstack:
    container_name: e2e-localstack
    image: localstack/localstack@sha256:0bc4495b8a204f80ee16779d968c857f570fd4ea08d3e2e898c226782fe1d74d
    environment:
      - SERVICES=kms,sns,ses,s3
      - PERSISTENCE=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./localstack.vol}:/var/lib/localstack"
    ports:
      - 14566:4566
      - 14510-14559:4510-4559

  libserver:
    image: nginx:alpine@sha256:4ff102c5d78d254a6f0da062b3cf39eaf07f01eec0927fd21e219d0af8bc0591
    container_name: libserver
    restart: on-failure
    ports:
      - "18082:80"
    volumes:
      - "../../../apps/sample-libapp:/srv"
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  velocity-mongo:
    container_name: velocity-mongo
    image: mongo:8.0@sha256:7bd28e5eea1c5766a084d5818254046f3ebe3b8f20a65e3a274640189e296667
    restart: on-failure
    ports:
      - 17017:27017
    volumes:
      - ./mongo-data.vol:/opt/besu/data

  vendor:
    container_name: e2e-vendor
    depends_on:
      - velocity-mongo
    build:
      context: ../../..
      dockerfile: Dockerfile-MockVendor
      target: builder
    volumes:
      - ../../../packages:/app/packages
      - /app/servers/mockvendor/node_modules
      - ../../mockvendor:/app/servers/mockvendor
    command: npx nodemon --exec "cd servers/mockvendor && yarn start"
    env_file:
      - ../../mockvendor/.localdev.env
    ports:
      - 13004:3000

  credentialagent:
    container_name: e2e-credentialagent
    depends_on:
      - certgen
      - velocity-mongo
      - vendor
    build:
      context: ../../..
      dockerfile: Dockerfile-CredentialAgent
      target: builder
    restart: on-failure
    volumes:
      - ../../../packages:/app/packages
      - /app/servers/credentialagent/node_modules
      - ..:/app/servers/credentialagent
    command: npx nodemon --exec "cd servers/credentialagent && yarn start"
    env_file:
      - ../.localdev.e2e.env
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    ports:
      - 13002:3000
    healthcheck:
      test: ["CMD", "wget", "http://0.0.0.0:3000/"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  registrar:
    container_name: e2e-registrar
    depends_on:
      certfix:
        condition: service_started
      velocity-mongo:
        condition: service_started
      fineract-server:
        condition: service_started
      auth0:
        condition: service_started
      credentialagent:
        condition: service_healthy

    build:
      context: ../../..
      dockerfile: Dockerfile-Oracle
      target: builder
    restart: on-failure
    volumes:
      - ../../../packages:/app/packages
      - /app/servers/oracle/node_modules
      - ../../oracle:/app/servers/oracle
      - httpscert:/certs
    command: npx nodemon --exec "cd servers/oracle && yarn start"
    env_file:
      - ../../oracle/.localdev.env
    environment:
      - SERVER_CERTIFICATE_FILE=/certs/cert.crt
      - SERVER_CERTIFICATE_KEY_FILE=/certs/key.pem
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    ports:
      - 13003:3000

  fineractmysql:
    image: mysql:8.4@sha256:0f775a92980b41c87c58f934a204de80431dd4d854057160ec1cb936663eabe9
    volumes:
      - ../../../db-init:/db-init
    command: --mysql-native-password=ON --init-file ../../../db-init/fineract-default.sql
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: skdcnwauicn2ucnaecasdsajdnizucawencascdca
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "--password=skdcnwauicn2ucnaecasdsajdnizucawencascdca" ]
      timeout: 10s
      retries: 10
    ports:
      - 13306:3306

  fineract-server:
    image: ghcr.io/velocitynetworkfoundation/fineract:dev
    restart: on-failure
    depends_on:
      - fineractmysql
      - auth0
    ports:
      - 13008:8080
    environment:
      - DRIVERCLASS_NAME=com.mysql.cj.jdbc.Driver
      - PROTOCOL=jdbc
      - SUB_PROTOCOL=mysql
      - fineract_tenants_driver=com.mysql.cj.jdbc.Driver
      - fineract_tenants_url=jdbc:mysql://fineractmysql:3306/fineract_tenants
      - fineract_tenants_uid=root
      - fineract_tenants_pwd=skdcnwauicn2ucnaecasdsajdnizucawencascdca
      - FINERACT_DEFAULT_TENANTDB_HOSTNAME=fineractmysql
      - FINERACT_DEFAULT_TENANTDB_PORT=3306
      - FINERACT_DEFAULT_TENANTDB_UID=root
      - FINERACT_DEFAULT_TENANTDB_PWD=skdcnwauicn2ucnaecasdsajdnizucawencascdca
      - FINERACT_DEFAULT_TENANTDB_CONN_PARAMS=
      - FINERACT_SECURITY_AUTH0_DOMAIN=http://auth0:3000
      - FINERACT_SECURITY_AUTH0_ISSUER_URI=http://auth0:3000/
      - FINERACT_SECURITY_AUTH0_AUDIENCE=testAudience
      - FINERACT_SENTRY_DSN=
      - FINERACT_SENTRY_EXCEPTION_RESOLVE_ORDER=-2147483647
      - FINERACT_SENTRY_LOGGING_ENABLED=false
      - FINERACT_SENTRY_LOGGING_MIN_EVENT_LEVEL=info
      - FINERACT_SENTRY_LOGGING_MIN_BREADCRUMB_LEVEL=debug
    entrypoint:
      - "java"
      - "-agentlib:jdwp=transport=dt_socket,server=y,address=*:8000,suspend=n"
      - "-Dloader.path=/app/libs/"
      - "-Duser.timezone=UTC"
      - "-jar"
      - "/app/fineract-provider.jar"

volumes:
  httpscert: